# Generated by Django 5.0.3 on 2024-04-22 18:21

import django.core.validators
import simple_history.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Aisle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "aisle_letter",
                    models.CharField(
                        help_text="Aisle identifier (letters only).",
                        max_length=5,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Za-z]+$",
                                "Only letters are allowed for aisle letters.",
                            )
                        ],
                        verbose_name="Aisle Letter",
                    ),
                ),
            ],
            options={
                "verbose_name": "Aisle",
                "verbose_name_plural": "Aisles",
            },
        ),
        migrations.CreateModel(
            name="HistoricalAisle",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "aisle_letter",
                    models.CharField(
                        help_text="Aisle identifier (letters only).",
                        max_length=5,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Za-z]+$",
                                "Only letters are allowed for aisle letters.",
                            )
                        ],
                        verbose_name="Aisle Letter",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Aisle",
                "verbose_name_plural": "historical Aisles",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalLocation",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        db_index=True,
                        help_text="Unique code for identifying the location.",
                        max_length=50,
                        verbose_name="Location Code",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the location.",
                        verbose_name="Description",
                    ),
                ),
                (
                    "side",
                    models.CharField(
                        choices=[
                            ("E", "East"),
                            ("W", "West"),
                            ("N", "North"),
                            ("S", "South"),
                        ],
                        help_text="Side of the location",
                        max_length=1,
                    ),
                ),
                ("location_number", models.IntegerField()),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("PND", "PND"),
                            ("Storage", "Storage"),
                            ("Pick Face", "Pick Face"),
                            ("Inbound Floor", "Inbound Floor"),
                            ("Outbound Floor", "Outbound Floor"),
                        ],
                        default="Storage",
                        max_length=15,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("empty", "Empty"),
                            ("full", "Full"),
                            ("vor", "Verification Required"),
                            ("urgent_pick", "Urgent Picking Required"),
                            ("urgent_replenish", "Urgent Replenishment Required"),
                            ("low_stock", "Low Stock"),
                        ],
                        default="empty",
                        max_length=20,
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical location",
                "verbose_name_plural": "historical locations",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalRack",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "rack_number",
                    models.CharField(max_length=50, verbose_name="Rack Number"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical rack",
                "verbose_name_plural": "historical racks",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalZone",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical zone",
                "verbose_name_plural": "historical zones",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Level",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("G", "Ground Floor"),
                            ("1", "Level 1"),
                            ("2", "Level 2"),
                            ("3", "Level 3"),
                            ("4", "Level 4"),
                        ],
                        default="G",
                        help_text="Specifies the level within the rack.",
                        max_length=1,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Unique code for identifying the location.",
                        max_length=50,
                        unique=True,
                        verbose_name="Location Code",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the location.",
                        verbose_name="Description",
                    ),
                ),
                (
                    "side",
                    models.CharField(
                        choices=[
                            ("E", "East"),
                            ("W", "West"),
                            ("N", "North"),
                            ("S", "South"),
                        ],
                        help_text="Side of the location",
                        max_length=1,
                    ),
                ),
                ("location_number", models.IntegerField()),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("PND", "PND"),
                            ("Storage", "Storage"),
                            ("Pick Face", "Pick Face"),
                            ("Inbound Floor", "Inbound Floor"),
                            ("Outbound Floor", "Outbound Floor"),
                        ],
                        default="Storage",
                        max_length=15,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("empty", "Empty"),
                            ("full", "Full"),
                            ("vor", "Verification Required"),
                            ("urgent_pick", "Urgent Picking Required"),
                            ("urgent_replenish", "Urgent Replenishment Required"),
                            ("low_stock", "Low Stock"),
                        ],
                        default="empty",
                        max_length=20,
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255)),
            ],
            options={
                "ordering": ["level", "side", "location_number"],
            },
        ),
        migrations.CreateModel(
            name="Rack",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rack_number",
                    models.CharField(max_length=50, verbose_name="Rack Number"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Sensor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sensor_type",
                    models.CharField(max_length=50, verbose_name="Sensor Type"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("Active", "Active"), ("Inactive", "Inactive")],
                        default="Active",
                        max_length=20,
                    ),
                ),
                (
                    "last_checked",
                    models.DateTimeField(auto_now=True, verbose_name="Last Checked"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SensorData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data", models.JSONField(verbose_name="Data")),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Timestamp"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Zone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
            ],
        ),
    ]
