# Generated by Django 5.0.3 on 2024-04-22 18:21

import django.core.validators
import django.db.models.deletion
import simple_history.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="format: required, max-100",
                        max_length=100,
                        verbose_name="category name",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="format: required, letters, numbers, underscore, or hyphens",
                        max_length=150,
                        unique=True,
                        verbose_name="category safe URL",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "weight_limit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum weight limit for this category in kilograms.",
                        max_digits=5,
                        null=True,
                        verbose_name="weight limit",
                    ),
                ),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
            ],
            options={
                "verbose_name": "product category",
                "verbose_name_plural": "product categories",
            },
        ),
        migrations.CreateModel(
            name="FoodProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sku", models.CharField(max_length=100, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("quantity", models.IntegerField()),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=8)),
                (
                    "is_high_demand",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the product is in high demand",
                    ),
                ),
                ("batch_number", models.CharField(max_length=100)),
                ("storage_temperature", models.CharField(max_length=50)),
                ("date_received", models.DateField()),
                ("expiration_date", models.DateField()),
                ("supplier", models.CharField(max_length=255)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("stock", models.IntegerField(default=0)),
            ],
            options={
                "ordering": ["expiration_date"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalAddress",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("street_number", models.CharField(max_length=128)),
                ("street_name", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=255)),
                ("county", models.CharField(max_length=255)),
                ("country", models.CharField(max_length=255)),
                ("post_code", models.CharField(db_index=True, max_length=20)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical address",
                "verbose_name_plural": "historical addresss",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalAuditLog",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("object_id", models.PositiveIntegerField(verbose_name="Object ID")),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("Start", "Task Started"),
                            ("Complete", "Task Completed"),
                            ("Interrupt", "Task Interrupted"),
                            ("Update", "Status Updated"),
                            ("Manual", "Manual Change"),
                        ],
                        max_length=50,
                        verbose_name="Action",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Timestamp"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Audit Log",
                "verbose_name_plural": "historical Audit Logs",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCategory",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="format: required, max-100",
                        max_length=100,
                        verbose_name="category name",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="format: required, letters, numbers, underscore, or hyphens",
                        max_length=150,
                        verbose_name="category safe URL",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "weight_limit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum weight limit for this category in kilograms.",
                        max_digits=5,
                        null=True,
                        verbose_name="weight limit",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical product category",
                "verbose_name_plural": "historical product categories",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalFoodProduct",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("sku", models.CharField(db_index=True, max_length=100)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("quantity", models.IntegerField()),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=8)),
                (
                    "is_high_demand",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the product is in high demand",
                    ),
                ),
                ("batch_number", models.CharField(max_length=100)),
                ("storage_temperature", models.CharField(max_length=50)),
                ("date_received", models.DateField()),
                ("expiration_date", models.DateField()),
                ("supplier", models.CharField(max_length=255)),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("stock", models.IntegerField(default=0)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical food product",
                "verbose_name_plural": "historical food products",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalStockLevel",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Current quantity of the product at the location.",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "batch_number",
                    models.CharField(
                        blank=True,
                        help_text="Batch number for tracking specific batches of the product",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "expiration_date",
                    models.DateField(
                        blank=True,
                        help_text="Expiration date of the product batch",
                        null=True,
                    ),
                ),
                ("last_updated", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Stock Level",
                "verbose_name_plural": "historical Stock Levels",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalSupplier",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="supplier name"),
                ),
                (
                    "contact",
                    models.CharField(max_length=255, verbose_name="supplier contact"),
                ),
                (
                    "email",
                    models.EmailField(max_length=254, verbose_name="supplier email"),
                ),
                (
                    "contact_number",
                    models.CharField(
                        max_length=50, verbose_name="supplier contact number"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical supplier",
                "verbose_name_plural": "historical suppliers",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="PredictionModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("model_file", models.FileField(upload_to="models/")),
            ],
        ),
        migrations.CreateModel(
            name="Report",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("inventory", "Inventory Report"),
                            ("order", "Order Report"),
                            ("supplier", "Supplier Report"),
                            ("shipment", "Shipment Report"),
                            ("activity", "User Activity Report"),
                            ("maximums", "Max Values Report"),
                        ],
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Report",
                "verbose_name_plural": "Reports",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="StockLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Current quantity of the product at the location.",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "batch_number",
                    models.CharField(
                        blank=True,
                        help_text="Batch number for tracking specific batches of the product",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "expiration_date",
                    models.DateField(
                        blank=True,
                        help_text="Expiration date of the product batch",
                        null=True,
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Stock Level",
                "verbose_name_plural": "Stock Levels",
                "ordering": ["location", "product", "-expiration_date"],
            },
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="supplier name"),
                ),
                (
                    "contact",
                    models.CharField(max_length=255, verbose_name="supplier contact"),
                ),
                (
                    "email",
                    models.EmailField(max_length=254, verbose_name="supplier email"),
                ),
                (
                    "contact_number",
                    models.CharField(
                        max_length=50, verbose_name="supplier contact number"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("PAY", "Payment"),
                            ("REF", "Refund"),
                            ("ADJ", "Adjustment"),
                        ],
                        default="PAY",
                        max_length=3,
                        verbose_name="Transaction Type",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PEN", "Pending"),
                            ("COM", "Completed"),
                            ("FAI", "Failed"),
                        ],
                        default="PEN",
                        max_length=3,
                        verbose_name="Status",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Amount"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
            ],
            options={
                "verbose_name": "Transaction",
                "verbose_name_plural": "Transactions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("street_number", models.CharField(max_length=128)),
                ("street_name", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=255)),
                ("county", models.CharField(max_length=255)),
                ("country", models.CharField(max_length=255)),
                ("post_code", models.CharField(max_length=20, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "unique_together": {("street_number", "post_code")},
            },
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField(verbose_name="Object ID")),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("Start", "Task Started"),
                            ("Complete", "Task Completed"),
                            ("Interrupt", "Task Interrupted"),
                            ("Update", "Status Updated"),
                            ("Manual", "Manual Change"),
                        ],
                        max_length=50,
                        verbose_name="Action",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Timestamp"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                        verbose_name="Content Type",
                    ),
                ),
            ],
            options={
                "verbose_name": "Audit Log",
                "verbose_name_plural": "Audit Logs",
            },
        ),
    ]
